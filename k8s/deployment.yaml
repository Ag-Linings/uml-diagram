
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uml-diagram-generator
  labels:
    app: uml-diagram-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uml-diagram-generator
  template:
    metadata:
      labels:
        app: uml-diagram-generator
    spec:
      containers:
      - name: uml-diagram-generator
        image: ${DOCKER_REGISTRY}/uml-diagram-generator:latest
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
          - name: VITE_API_URL
            value: http://backend-service:8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
  labels:
    app: backend-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-service
  template:
    metadata:
      labels:
        app: backend-service
    spec:
      containers:
      - name: backend-service
        image: ${DOCKER_REGISTRY}/uml-diagram-backend:latest
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        env:
          - name: DB_HOST
            value: mysql-service
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: mysql-secrets
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secrets
                key: password
          - name: DB_NAME
            value: uml_generator
          - name: DB_PORT
            value: "3306"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secrets
                key: root-password
          - name: MYSQL_DATABASE
            value: uml_generator
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-secrets
                key: username
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secrets
                key: password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend-service
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
  - port: 3306
    targetPort: 3306
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Example Secret (for reference only - you should create this separately with actual credentials)
# Don't include secrets in version control
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: Opaque
data:
  username: dW1sdXNlcg== # umluser (base64 encoded)
  password: cGFzc3dvcmQ= # password (base64 encoded)
  root-password: cm9vdHBhc3N3b3Jk # rootpassword (base64 encoded)
